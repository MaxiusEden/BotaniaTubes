plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

// Mojang exige Java 17 para Minecraft 1.18+. Recomendação: usar Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty('java.version')}, JVM: ${System.getProperty('java.vm.version')} (${System.getProperty('java.vendor')}), Arch: ${System.getProperty('os.arch')}"

// Configuração do Minecraft
minecraft {
    // Configure mappings (ex.: official, parchment, etc.)
    mappings channel: mapping_channel, version: mapping_version

    // Permitir que Gradle processe os recursos durante o uso no IDE.
    copyIdeResources = true

    // Configurações padrão de execução.
    runs {
        configureEach {
            workingDirectory project.file('run')

            // Logging recomendado para debugging em ambiente de desenvolvimento.
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            // Adicionar o mod principal.
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

// Incluir recursos gerados.
sourceSets.main.resources { srcDir 'src/generated/resources' }

// Configuração dos repositórios Maven necessários para dependências.
repositories {
    mavenCentral() // Repositório central
    maven { url = 'https://maven.minecraftforge.net/' } // Forge
    maven { url = 'https://modmaven.dev/' } // Mods como Botania
    maven { url = 'https://maven.blamejared.com' } // Adicionais
}

// Configuração das dependências.
dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation fg.deobf("vazkii.botania:Botania:${botania_version}")
}

// Expansão de propriedades no mods.toml e pack.mcmeta.
tasks.named('processResources', ProcessResources).configure {
    def replaceProperties = [
            minecraft_version: minecraft_version,
            minecraft_version_range: minecraft_version_range,
            forge_version: forge_version,
            forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id,
            mod_name: mod_name,
            mod_license: mod_license,
            mod_version: mod_version,
            mod_authors: mod_authors,
            mod_description: mod_description,
            botania_version: botania_version
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties
    }
}

// Adicionar informações ao manifesto.
tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title': mod_id,
                'Specification-Vendor': mod_authors,
                'Specification-Version': '1', // Versão 1 do manifesto.
                'Implementation-Title': project.name,
                'Implementation-Version': project.jar.archiveVersion,
                'Implementation-Vendor': mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    // Obfuscador automático no final.
    finalizedBy 'reobfJar'
}

// Configuração do Maven para publicação (opcional).
publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

// Configuração geral do Java.
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Definir encoding padrão.
}